#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏ PDF Merger Pro v2.2
–°–æ–∑–¥–∞–µ—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –∏–∑ –º–æ–¥—É–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
–í–∫–ª—é—á–∞–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤ –∏ –∫–∏—Ä–∏–ª–∏—Ü—ã
"""

import PyInstaller.__main__
import sys
from pathlib import Path

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è —Å–±–æ—Ä–∫–∏."""
    missing_deps = []

    try:
        import PyInstaller
        print(f"‚úÖ PyInstaller {PyInstaller.__version__}")
    except ImportError:
        missing_deps.append("PyInstaller")

    try:
        from PyQt6.QtCore import qVersion
        print(f"‚úÖ PyQt6 {qVersion()}")
    except ImportError:
        missing_deps.append("PyQt6")

    try:
        import PyPDF2
        print(f"‚úÖ PyPDF2 {PyPDF2.__version__}")
    except ImportError:
        missing_deps.append("PyPDF2")

    try:
        import qtawesome
        print(f"‚úÖ qtawesome {qtawesome.__version__}")
    except ImportError:
        missing_deps.append("qtawesome")

    try:
        import fitz
        print(f"‚úÖ PyMuPDF {fitz.version[0]} (–ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä + –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ)")
    except ImportError:
        print("‚ö†Ô∏è  PyMuPDF –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã)")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤
    print("\nüì¶ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤:")

    try:
        import PIL
        print(f"‚úÖ Pillow {PIL.__version__} (–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)")
    except ImportError:
        print("‚ö†Ô∏è  Pillow –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞)")

    try:
        import reportlab
        print(f"‚úÖ reportlab {reportlab.Version} (—Å–æ–∑–¥–∞–Ω–∏–µ PDF –∏–∑ —Ç–µ–∫—Å—Ç–∞)")
    except ImportError:
        print("‚ö†Ô∏è  reportlab –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞)")

    try:
        import docx2pdf
        # –ü–æ–ª—É—á–∞–µ–º –≤–µ—Ä—Å–∏—é –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
        version = getattr(docx2pdf, '__version__', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞')
        print(f"‚úÖ docx2pdf {version} (–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è Word –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤)")
    except ImportError:
        print("‚ö†Ô∏è  docx2pdf –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è Word –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞)")

    if missing_deps:
        print(f"\n‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: {', '.join(missing_deps)}")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö: pip install " + " ".join(missing_deps))
        return False

    print("\n‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    return True

def get_build_info():
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–±–æ—Ä–∫–µ."""
    script_dir = Path(__file__).parent

    # –û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç (–Ω–æ–≤–∞—è –º–æ–¥—É–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)
    main_script = script_dir / 'main.py'

    # –§–∞–π–ª –∏–∫–æ–Ω–∫–∏
    icon_file = script_dir / 'pdf.ico'

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    if not main_script.exists():
        print(f"‚ùå –û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: {main_script}")
        return None

    if not icon_file.exists():
        print(f"‚ö†Ô∏è  –§–∞–π–ª –∏–∫–æ–Ω–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {icon_file}")
        icon_file = None

    return {
        'main_script': str(main_script),
        'icon_file': str(icon_file) if icon_file else None,
        'script_dir': str(script_dir)
    }

def create_spec_content(build_info):
    """–°–æ–∑–¥–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ .spec —Ñ–∞–π–ª–∞ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–π —Å–±–æ—Ä–∫–∏."""
    spec_content = f'''# -*- mode: python ; coding: utf-8 -*-

block_cipher = None

a = Analysis(
    ['{build_info["main_script"]}'],
    pathex=['{build_info["script_dir"]}'],
    binaries=[],
    datas=[
        ('ui', 'ui'),
        ('core', 'core'),
        ('README.md', '.'),
        ('USAGE.md', '.'),
        ('MULTIPREVIEW.md', '.'),
        ('FILE_CONVERSION.md', '.'),
        ('CYRILLIC_FIX.md', '.'),
        ('MERGE_CYRILLIC_FIX.md', '.'),
        ('requirements.txt', '.'),
    ],
    hiddenimports=[
        'PyQt6.QtCore',
        'PyQt6.QtGui',
        'PyQt6.QtWidgets',
        'PyPDF2',
        'qtawesome',
        'qtawesome.iconic_font',
        'fitz',  # PyMuPDF
        'PIL',  # Pillow
        'PIL.Image',
        'reportlab',
        'reportlab.pdfgen',
        'reportlab.pdfgen.canvas',
        'reportlab.lib.pagesizes',
        'reportlab.lib.utils',
        'reportlab.pdfbase',
        'reportlab.pdfbase.ttfonts',
        'reportlab.pdfbase.pdfmetrics',
        'reportlab.lib.fonts',
        'docx2pdf',
        'platform',
        'tempfile',
        'pathlib',
    ],
    hookspath=[],
    hooksconfig={{}},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='PDFMergerPro',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=False,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,'''

    if build_info['icon_file']:
        spec_content += f"\n    icon='{build_info['icon_file']}',"

    spec_content += "\n)\n"

    return spec_content

def build_application():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É PDF Merger Pro v2.2")
    print("=" * 50)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    print("üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    if not check_dependencies():
        return False

    print("\nüìÅ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–±–æ—Ä–∫–µ...")
    build_info = get_build_info()
    if not build_info:
        return False

    print(f"‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç: {build_info['main_script']}")
    if build_info['icon_file']:
        print(f"‚úÖ –ò–∫–æ–Ω–∫–∞: {build_info['icon_file']}")

    # –°–æ–∑–¥–∞–µ–º .spec —Ñ–∞–π–ª –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–π —Å–±–æ—Ä–∫–∏
    print("\nüìù –°–æ–∑–¥–∞–Ω–∏–µ .spec —Ñ–∞–π–ª–∞...")
    spec_file = Path(build_info['script_dir']) / 'PDFMergerPro.spec'
    spec_content = create_spec_content(build_info)

    try:
        with open(spec_file, 'w', encoding='utf-8') as f:
            f.write(spec_content)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω .spec —Ñ–∞–π–ª: {spec_file}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è .spec —Ñ–∞–π–ª–∞: {e}")
        return False

    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è PyInstaller
    print("\nüî® –ó–∞–ø—É—Å–∫ PyInstaller...")
    pyinstaller_args = [
        str(spec_file),
        '--clean',  # –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à
        '--noconfirm',  # –ù–µ —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    ]

    try:
        PyInstaller.__main__.run(pyinstaller_args)
        print("\n‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
        dist_dir = Path(build_info['script_dir']) / 'dist'
        exe_file = dist_dir / 'PDFMergerPro.exe'

        if exe_file.exists():
            file_size = exe_file.stat().st_size / (1024 * 1024)  # MB
            print(f"üì¶ –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª: {exe_file}")
            print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size:.1f} –ú–ë")
            print(f"üìÇ –ü–∞–ø–∫–∞ —Å–±–æ—Ä–∫–∏: {dist_dir}")

            print("\nüéØ PDF Merger Pro v2.2 –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
            print("‚ú® –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:")
            print("‚Ä¢ üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ (Word, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, —Ç–µ–∫—Å—Ç)")
            print("‚Ä¢ üî§ –ü–æ–ª–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–∏—Ä–∏–ª–∏—Ü—ã")
            print("‚Ä¢ üìÅ Drag & Drop –¥–ª—è –≤—Å–µ—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤")
            print("‚Ä¢ üõ°Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤")
            print("‚Ä¢ ‚ö° –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Å PyMuPDF")

            print("\nüìã –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:")
            print("‚Ä¢ üìÑ –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ PDF —Ñ–∞–π–ª–æ–≤")
            print("‚Ä¢ üëÅÔ∏è –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä")
            print("‚Ä¢ üñºÔ∏è –ú—É–ª—å—Ç–∏–ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä")
            print("‚Ä¢ üé® –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (1366x768+)")

        return True

    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: {e}")
        return False

    finally:
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        try:
            if spec_file.exists():
                spec_file.unlink()
                print(f"üßπ –£–¥–∞–ª–µ–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π .spec —Ñ–∞–π–ª")
        except Exception:
            pass

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) > 1 and sys.argv[1] == '--check-only':
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π PDF Merger Pro v2.2")
        print("=" * 50)

        if check_dependencies():
            print("\n‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ –ø–æ—Ä—è–¥–∫–µ, –≥–æ—Ç–æ–≤ –∫ —Å–±–æ—Ä–∫–µ!")
            sys.exit(0)
        else:
            print("\n‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏")
            sys.exit(1)

    try:
        success = build_application()

        if success:
            print("\nüéâ –°–±–æ—Ä–∫–∞ PDF Merger Pro v2.2 –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            print("üìã –ß—Ç–æ –¥–∞–ª—å—à–µ:")
            print("   1. –ù–∞–π–¥–∏—Ç–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –≤ –ø–∞–ø–∫–µ 'dist'")
            print("   2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é —Ñ–∞–π–ª–æ–≤")
            print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∫—É –∫–∏—Ä–∏–ª–∏—Ü—ã")
            print("   4. –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–π—Ç–µ –≥–æ—Ç–æ–≤—ã–π —Ñ–∞–π–ª")
            print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
            print("   ‚Ä¢ –î–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PyMuPDF")
            print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —à—Ä–∏—Ñ—Ç–æ–≤ –¥–ª—è –∫–∏—Ä–∏–ª–∏—Ü—ã")
            sys.exit(0)
        else:
            print("\nüí• –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
            sys.exit(1)

    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  –°–±–æ—Ä–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"\nüí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)

if __name__ == '__main__':
    main()
