import sys
import os
from PyQt6.QtWidgets import (QApplication, QMainWindow, QVBoxLayout, QHBoxLayout,
                             QWidget, QListWidget, QPushButton, QFileDialog,
                             QMessageBox, QLabel, QDialog, QScrollArea,
                             QComboBox, QSplitter, QToolButton)
from PyQt6.QtCore import Qt, QThread, pyqtSignal
from PyQt6.QtGui import QDragEnterEvent, QDropEvent, QFont, QPixmap, QImage
import qtawesome as qta

try:
    from PyPDF2 import PdfReader, PdfWriter
except ImportError:
    print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PyPDF2: pip install PyPDF2")
    sys.exit(1)

try:
    import fitz # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º PyMuPDF
except ImportError:
    print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PyMuPDF –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞: pip install PyMuPDF")
    # –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞, –Ω–æ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º
    fitz = None

# –î–æ–±–∞–≤–ª—è–µ–º –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–æ–≤ –¥–ª—è PyMuPDF
# pyright: reportAttributeAccessIssue=false

class PDFMergerWorker(QThread):
    """–†–∞–±–æ—á–∏–π –ø–æ—Ç–æ–∫ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è PDF —Ñ–∞–π–ª–æ–≤."""
    finished = pyqtSignal(str)
    error = pyqtSignal(str)
    # Optional: progress = pyqtSignal(int) # –î–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º/—Ñ–∞–π–ª–∞–º

    def __init__(self, file_paths, output_path):
        super().__init__()
        self.file_paths = file_paths
        self.output_path = output_path

    def run(self):
        merger = PdfWriter()
        try:
            for file_path in self.file_paths:
                if not os.path.exists(file_path):
                    self.error.emit(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {os.path.basename(file_path)}")
                    return

                with open(file_path, 'rb') as pdf_file:
                    pdf_reader = PdfReader(pdf_file)
                    # Optional: self.progress.emit(...) # Emit progress for each file or page
                    for page in pdf_reader.pages:
                         merger.add_page(page)

            with open(self.output_path, 'wb') as output:
                merger.write(output)

            self.finished.emit(self.output_path)

        except Exception as e:
            self.error.emit(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤: {str(e)}")


class PDFListWidget(QListWidget):
    def __init__(self):
        super().__init__()
        self.setAcceptDrops(True)
        self.setDragDropMode(QListWidget.DragDropMode.InternalMove)
        self.setDefaultDropAction(Qt.DropAction.MoveAction)

        # –£–ª—É—á—à–µ–Ω–Ω—ã–π placeholder –¥–ª—è –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞
        self.setStyleSheet("""
            QListWidget {
                border: 2px dashed #adb5bd;
                border-radius: 12px;
                background-color: #f8f9fa;
                color: #6c757d;
                font-size: 14px;
                text-align: center;
                padding: 40px;
            }
            QListWidget:focus {
                border-color: #667eea;
                background-color: #f8f9fa;
            }
        """)

        # –î–æ–±–∞–≤–ª—è–µ–º placeholder —Ç–µ–∫—Å—Ç
        self.placeholder_text = "üìÅ –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ PDF —Ñ–∞–π–ª—ã —Å—é–¥–∞\n–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã'"
        self.update_placeholder()

    def update_placeholder(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ placeholder —Ç–µ–∫—Å—Ç–∞"""
        if self.count() == 0:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º placeholder
            self.setStyleSheet("""
                QListWidget {
                    border: 2px dashed #adb5bd;
                    border-radius: 12px;
                    background-color: #f8f9fa;
                    color: #6c757d;
                    font-size: 14px;
                    text-align: center;
                    padding: 40px;
                }
                QListWidget:focus {
                    border-color: #667eea;
                    background-color: #f8f9fa;
                }
            """)
        else:
            # –û–±—ã—á–Ω—ã–π —Å—Ç–∏–ª—å –¥–ª—è —Å–ø–∏—Å–∫–∞ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
            self.setStyleSheet("")

    def addItem(self, item):
        """–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è placeholder"""
        super().addItem(item)
        self.update_placeholder()

    def clear(self):
        """–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è placeholder"""
        super().clear()
        self.update_placeholder()

    def takeItem(self, row):
        """–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è placeholder"""
        result = super().takeItem(row)
        self.update_placeholder()
        return result

    def dragEnterEvent(self, event: QDragEnterEvent):
        mime_data = event.mimeData()
        if mime_data and mime_data.hasUrls():
            event.accept()
        else:
            event.ignore()

    def dropEvent(self, event: QDropEvent):
        mime_data = event.mimeData()
        if mime_data and mime_data.hasUrls():
            files = []
            for url in mime_data.urls():
                if url.isLocalFile():
                    file_path = url.toLocalFile()
                    if file_path.lower().endswith('.pdf'):
                        files.append(file_path)

            if files:
                # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
                existing_files = []
                for i in range(self.count()):
                    item = self.item(i)
                    if item:
                        existing_files.append(item.text())
                for file_path in files:
                    if file_path and file_path not in existing_files:
                        self.addItem(file_path)
                event.accept()
            else:
                event.ignore()
        else:
            super().dropEvent(event)


class PDFMultiPreviewDialog(QDialog):
    """–î–∏–∞–ª–æ–≥ –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö PDF-—Ñ–∞–π–ª–æ–≤ –ø–µ—Ä–µ–¥ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ–º"""

    def __init__(self, parent=None, file_paths=None):
        super().__init__(parent)
        self.file_paths = file_paths or []
        self.current_file_index = 0
        self.current_page = 0
        self.doc = None
        self.zoom_factor = 1.0

        self.init_ui()
        self.load_current_file()

    def init_ui(self):
        self.setWindowTitle('–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤')
        # –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –ø–æ–¥ –Ω–∏–∑–∫–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
        self.setGeometry(50, 20, 900, 650)
        self.setMinimumSize(800, 550)
        self.setMaximumSize(1100, 750)

        # –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω –¥–ª—è –º—É–ª—å—Ç–∏–ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        self.setStyleSheet("""
            QDialog {
                background-color: #f8f9fa;
                color: #212529;
            }
            QLabel#page_display {
                font-size: 14px;
                color: #495057;
                padding: 8px 12px;
                background-color: white;
                border-radius: 6px;
                font-weight: 500;
            }
            QComboBox {
                border: 2px solid #e9ecef;
                border-radius: 6px;
                padding: 8px 12px;
                min-width: 120px;
                font-size: 13px;
                background-color: white;
            }
            QComboBox:hover {
                border-color: #6c757d;
            }
            QPushButton, QToolButton {
                background-color: white;
                border: 2px solid #e9ecef;
                border-radius: 8px;
                padding: 10px 16px;
                font-size: 13px;
                font-weight: 500;
                color: #495057;
                min-width: 100px;
            }
            QPushButton:hover, QToolButton:hover {
                background-color: #f8f9fa;
                border-color: #6c757d;
            }
            QScrollArea {
                border: none;
                background-color: white;
                border-radius: 12px;
            }
            QListWidget {
                border: none;
                border-radius: 8px;
                background-color: white;
                padding: 12px;
                font-size: 13px;
            }
            QListWidget::item {
                padding: 10px 12px;
                border: none;
                border-radius: 6px;
                margin: 2px 0;
                background-color: transparent;
            }
            QListWidget::item:hover {
                background-color: #f8f9fa;
            }
            QListWidget::item:selected {
                background: qlineargradient(x1:0, y1:0, x2:1, y2:0,
                    stop:0 #667eea, stop:1 #764ba2);
                color: white;
                font-weight: 500;
            }
            QLabel {
                color: #495057;
                font-family: 'Segoe UI', Arial, sans-serif;
            }
        """)

        # –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –º–∞–∫–µ—Ç —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º
        main_layout = QVBoxLayout(self)
        main_layout.setSpacing(8)
        main_layout.setContentsMargins(12, 10, 12, 10)

        # –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel('–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ñ–∞–π–ª–æ–≤')
        title_font = QFont()
        title_font.setPointSize(12)
        title_font.setBold(True)
        title_label.setFont(title_font)
        title_label.setStyleSheet("color: #333; margin-bottom: 6px;")
        title_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        main_layout.addWidget(title_label)

        # –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        splitter = QSplitter(Qt.Orientation.Horizontal)

        # –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
        file_panel = QWidget()
        file_layout = QVBoxLayout(file_panel)
        file_layout.setContentsMargins(0, 0, 10, 0)

        file_list_label = QLabel('–°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤:')
        file_list_label.setStyleSheet("font-weight: bold;")
        file_layout.addWidget(file_list_label)

        self.file_list_widget = QListWidget()
        self.file_list_widget.setMinimumWidth(200)
        self.file_list_widget.currentRowChanged.connect(self.change_file)

        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
        for file_path in self.file_paths:
            self.file_list_widget.addItem(os.path.basename(file_path))

        file_layout.addWidget(self.file_list_widget, 1)
        splitter.addWidget(file_panel)

        # –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - –ø—Ä–æ—Å–º–æ—Ç—Ä PDF
        preview_panel = QWidget()
        preview_layout = QVBoxLayout(preview_panel)
        preview_layout.setContentsMargins(10, 0, 0, 0)

        # –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ –¥–≤–µ —Å—Ç—Ä–æ–∫–∏
        controls_widget = QWidget()
        controls_layout = QVBoxLayout(controls_widget)
        controls_layout.setSpacing(4)
        controls_layout.setContentsMargins(0, 0, 0, 0)

        # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ
        info_panel = QHBoxLayout()
        info_panel.setSpacing(8)

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ
        self.file_info_label = QLabel()
        self.file_info_label.setStyleSheet("font-weight: bold; font-size: 12px;")
        info_panel.addWidget(self.file_info_label)
        info_panel.addStretch()
        controls_layout.addLayout(info_panel)

        # –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ - –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∏ –º–∞—Å—à—Ç–∞–±
        nav_panel = QHBoxLayout()
        nav_panel.setSpacing(8)

        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
        self.prev_btn = QToolButton()
        self.prev_btn.setIcon(qta.icon('fa5s.chevron-left'))
        self.prev_btn.setToolTip('–ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞')
        self.prev_btn.clicked.connect(self.prev_page)
        self.prev_btn.setFixedSize(28, 28)
        nav_panel.addWidget(self.prev_btn)

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π/–≤—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü
        self.page_label = QLabel('–°—Ç—Ä–∞–Ω–∏—Ü–∞: 0 / 0')
        self.page_label.setObjectName('page_display')
        self.page_label.setMinimumWidth(100)
        self.page_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        nav_panel.addWidget(self.page_label)

        self.next_btn = QToolButton()
        self.next_btn.setIcon(qta.icon('fa5s.chevron-right'))
        self.next_btn.setToolTip('–°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞')
        self.next_btn.clicked.connect(self.next_page)
        self.next_btn.setFixedSize(28, 28)
        nav_panel.addWidget(self.next_btn)

        nav_panel.addStretch()

        # –í—ã–±–æ—Ä –º–∞—Å—à—Ç–∞–±–∞
        zoom_label = QLabel('–ú–∞—Å—à—Ç–∞–±:')
        zoom_label.setStyleSheet("font-size: 11px;")
        nav_panel.addWidget(zoom_label)

        self.zoom_combo = QComboBox()
        self.zoom_combo.addItems(['50%', '75%', '100%', '125%', '150%', '200%'])
        self.zoom_combo.setCurrentText('100%')
        self.zoom_combo.currentTextChanged.connect(self.change_zoom)
        self.zoom_combo.setMinimumWidth(70)
        nav_panel.addWidget(self.zoom_combo)

        controls_layout.addLayout(nav_panel)
        preview_layout.addWidget(controls_widget)

        # –û–±–ª–∞—Å—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        self.scroll_area = QScrollArea()
        self.scroll_area.setWidgetResizable(False)  # –í–∞–∂–Ω–æ: False –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –±–æ–ª—å—à–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
        self.scroll_area.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAsNeeded)
        self.scroll_area.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAsNeeded)

        # –ú–µ—Ç–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–±–µ–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞)
        self.preview_label = QLabel('–í—ã–±–µ—Ä–∏—Ç–µ PDF —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞')
        self.preview_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.preview_label.setStyleSheet("background-color: white;")

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–µ—Ç–∫—É –∫–∞–∫ –≤–∏–¥–∂–µ—Ç –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        self.scroll_area.setWidget(self.preview_label)

        preview_layout.addWidget(self.scroll_area, 1)

        splitter.addWidget(preview_panel)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è
        splitter.setSizes([200, 700])  # –ü—Ä–∏–º–µ—Ä–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω

        main_layout.addWidget(splitter, 1)

        # –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Ñ–∞–π–ª–∞–º
        bottom_panel = QHBoxLayout()

        self.prev_file_btn = QPushButton('–ü—Ä–µ–¥—ã–¥—É—â–∏–π —Ñ–∞–π–ª')
        self.prev_file_btn.setIcon(qta.icon('fa5s.file-pdf'))
        self.prev_file_btn.clicked.connect(self.prev_file)
        bottom_panel.addWidget(self.prev_file_btn)

        bottom_panel.addStretch()

        self.next_file_btn = QPushButton('–°–ª–µ–¥—É—é—â–∏–π —Ñ–∞–π–ª')
        self.next_file_btn.setIcon(qta.icon('fa5s.file-pdf'))
        self.next_file_btn.clicked.connect(self.next_file)
        bottom_panel.addWidget(self.next_file_btn)

        main_layout.addLayout(bottom_panel)

        # –ö–Ω–æ–ø–∫–∏ OK/–û—Ç–º–µ–Ω–∞
        buttons_panel = QHBoxLayout()
        buttons_panel.addStretch()

        close_btn = QPushButton('–ó–∞–∫—Ä—ã—Ç—å')
        close_btn.clicked.connect(self.close)
        buttons_panel.addWidget(close_btn)

        main_layout.addLayout(buttons_panel)

        # –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        self.update_navigation()

    def load_current_file(self):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ–∫—É—â–∏–π PDF —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"""
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç, –µ—Å–ª–∏ –æ–Ω –æ—Ç–∫—Ä—ã—Ç
        if self.doc:
            self.doc.close()  # type: ignore
            self.doc = None

        if not self.file_paths or self.current_file_index >= len(self.file_paths):
            self.preview_label.setText("–ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞")
            self.update_navigation()
            return

        if not fitz:
            self.preview_label.setText("PyMuPDF –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.\n–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É: pip install PyMuPDF")
            self.update_navigation()
            return

        try:
            file_path = self.file_paths[self.current_file_index]
            if not os.path.exists(file_path):
                self.preview_label.setText(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {os.path.basename(file_path)}")
                self.update_navigation()
                return

            self.doc = fitz.open(file_path)  # type: ignore
            self.current_page = 0

            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ –∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
            self.file_info_label.setText(f'–§–∞–π–ª: {os.path.basename(file_path)}')
            self.page_label.setText(f'–°—Ç—Ä–∞–Ω–∏—Ü–∞: 1 / {len(self.doc)}')

            # –í—ã–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª –≤ —Å–ø–∏—Å–∫–µ
            self.file_list_widget.setCurrentRow(self.current_file_index)

            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            self.display_page()

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            self.update_navigation()
        except Exception as e:
            self.preview_label.setText(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ PDF: {str(e)}")
            self.update_navigation()

    def display_page(self):
        """–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É PDF"""
        if not self.doc or self.current_page < 0 or self.current_page >= len(self.doc):
            return

        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            page = self.doc[self.current_page]

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∞—Å—à—Ç–∞–±
            zoom = self.zoom_factor

            # –†–µ–Ω–¥–µ—Ä–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            if fitz:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ fitz –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ
                # type: ignore - –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–æ–≤ –¥–ª—è PyMuPDF
                pix = page.get_pixmap(matrix=fitz.Matrix(zoom, zoom))  # type: ignore
            else:
                return

            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ QImage
            img = QImage(pix.samples, pix.width, pix.height, pix.stride, QImage.Format.Format_RGB888)

            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ QPixmap –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º
            pixmap = QPixmap.fromImage(img)
            self.preview_label.setPixmap(pixmap)

            # –ò–∑–º–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –º–µ—Ç–∫–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ä–∞–∑–º–µ—Ä–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            self.preview_label.resize(pixmap.size())

            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            self.page_label.setText(f'–°—Ç—Ä–∞–Ω–∏—Ü–∞: {self.current_page + 1} / {len(self.doc)}')

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            self.update_navigation()
        except Exception as e:
            self.preview_label.setText(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {str(e)}")
            self.update_navigation()

    def prev_page(self):
        """–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ"""
        if self.doc and self.current_page > 0:
            self.current_page -= 1
            self.display_page()

    def next_page(self):
        """–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ"""
        if self.doc and self.current_page < len(self.doc) - 1:
            self.current_page += 1
            self.display_page()

    def prev_file(self):
        """–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —Ñ–∞–π–ª—É"""
        if self.current_file_index > 0:
            self.current_file_index -= 1
            self.load_current_file()

    def next_file(self):
        """–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ñ–∞–π–ª—É"""
        if self.current_file_index < len(self.file_paths) - 1:
            self.current_file_index += 1
            self.load_current_file()

    def change_file(self, row):
        """–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª –ø–æ –≤—ã–±–æ—Ä—É –≤ —Å–ø–∏—Å–∫–µ"""
        if 0 <= row < len(self.file_paths):
            self.current_file_index = row
            self.load_current_file()

    def change_zoom(self, zoom_text):
        """–ò–∑–º–µ–Ω–∏—Ç—å –º–∞—Å—à—Ç–∞–± –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        try:
            zoom_value = float(zoom_text.rstrip('%')) / 100.0
            self.zoom_factor = zoom_value

            if self.doc:
                self.display_page()
        except ValueError:
            pass

    def update_navigation(self):
        """–û–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
        has_files = len(self.file_paths) > 0
        has_doc = self.doc is not None

        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü –±–µ–∑–æ–ø–∞—Å–Ω–æ
        doc_page_count = 0
        if has_doc and self.doc is not None:
            try:
                doc_page_count = len(self.doc)
            except (AttributeError, TypeError):
                doc_page_count = 0

        doc_has_pages = doc_page_count > 0

        # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
        self.prev_btn.setEnabled(has_doc and self.current_page > 0)
        self.next_btn.setEnabled(doc_has_pages and self.current_page < doc_page_count - 1)

        # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ñ–∞–π–ª–∞–º
        self.prev_file_btn.setEnabled(has_files and self.current_file_index > 0)
        self.next_file_btn.setEnabled(has_files and self.current_file_index < len(self.file_paths) - 1)

        # –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
        self.zoom_combo.setEnabled(doc_has_pages)

    def closeEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞"""
        if self.doc:
            self.doc.close()  # type: ignore
        event.accept()


class PDFMergerApp(QMainWindow):
    def __init__(self):
        super().__init__()
        self.worker = None # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–∞–±–æ—á–∏–π –ø–æ—Ç–æ–∫
        self.init_ui()

    def init_ui(self):
        self.setWindowTitle('PDF Merger Pro')
        # –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –ø–æ–¥ –Ω–∏–∑–∫–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è (1366x768)
        self.setGeometry(50, 30, 650, 600)
        self.setMinimumSize(600, 500)
        self.setMaximumSize(800, 700)

        # –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ü–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞ (–±–µ–∑ –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Å–≤–æ–π—Å—Ç–≤)
        self.setStyleSheet("""
            QMainWindow {
                background-color: #f8f9fa;
                color: #212529;
            }

            /* –ö–∞—Ä—Ç–æ—á–∫–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ */
            QListWidget {
                background-color: white;
                border: 2px solid #e9ecef;
                border-radius: 12px;
                padding: 16px;
                font-size: 14px;
                font-family: 'Segoe UI', Arial, sans-serif;
            }

            /* –°—Ç–∏–ª–∏ –¥–ª—è –ø–æ–ª–æ—Å—ã –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ */
            QScrollBar:vertical {
                background-color: #f8f9fa;
                width: 12px;
                border-radius: 6px;
                margin: 0;
            }
            QScrollBar::handle:vertical {
                background-color: #adb5bd;
                border-radius: 6px;
                min-height: 20px;
                margin: 2px;
            }
            QScrollBar::handle:vertical:hover {
                background-color: #6c757d;
            }
            QScrollBar::add-line:vertical, QScrollBar::sub-line:vertical {
                height: 0px;
            }
            QListWidget::item {
                padding: 12px 16px;
                border: none;
                border-radius: 8px;
                margin: 2px 0;
                background-color: transparent;
                color: #495057;
            }
            QListWidget::item:hover {
                background-color: #f8f9fa;
                color: #212529;
            }
            QListWidget::item:selected {
                background-color: #667eea;
                color: white;
                font-weight: 500;
            }

            /* –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ */
            QPushButton {
                background-color: white;
                border: 2px solid #e9ecef;
                border-radius: 8px;
                padding: 8px 16px;
                font-size: 13px;
                font-weight: 500;
                font-family: 'Segoe UI', Arial, sans-serif;
                color: #495057;
                min-width: 100px;
                max-height: 36px;
            }
            QPushButton:hover {
                background-color: #f8f9fa;
                border-color: #6c757d;
                color: #212529;
            }
            QPushButton:pressed {
                background-color: #e9ecef;
            }
            QPushButton:disabled {
                background-color: #f8f9fa;
                color: #adb5bd;
                border-color: #e9ecef;
            }

            /* –ì–ª–∞–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è */
            QPushButton#merge_btn {
                background-color: #667eea;
                color: white;
                border: none;
                font-weight: 600;
                font-size: 14px;
                padding: 12px 20px;
                max-height: 44px;
            }
            QPushButton#merge_btn:hover {
                background-color: #5a6fd8;
            }
            QPushButton#merge_btn:pressed {
                background-color: #4e63d2;
            }
            QPushButton#merge_btn:disabled {
                background-color: #adb5bd;
                color: #6c757d;
            }

            /* –ö–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ */
            QPushButton#preview_all_btn {
                background-color: #11998e;
                color: white;
                border: none;
                font-weight: 600;
                padding: 10px 16px;
                max-height: 40px;
            }
            QPushButton#preview_all_btn:hover {
                background-color: #0f8a7e;
            }

            /* –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∏ —Ç–µ–∫—Å—Ç */
            QLabel#title {
                color: #212529;
                font-size: 18px;
                font-weight: 700;
                font-family: 'Segoe UI', Arial, sans-serif;
            }
            QLabel#subtitle {
                color: #6c757d;
                font-size: 14px;
                font-family: 'Segoe UI', Arial, sans-serif;
                margin-bottom: 8px;
            }
            QLabel#status {
                color: #495057;
                font-size: 13px;
                font-family: 'Segoe UI', Arial, sans-serif;
                font-weight: 500;
                padding: 8px 12px;
                background-color: white;
                border-radius: 6px;
                border: 1px solid #e9ecef;
            }

            /* –ì—Ä—É–ø–ø—ã –∫–Ω–æ–ø–æ–∫ */
            QWidget#button_group {
                background-color: white;
                border: 2px solid #e9ecef;
                border-radius: 8px;
                padding: 12px;
                margin: 4px 0;
            }
        """)

        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        central_widget = QWidget()
        self.setCentralWidget(central_widget)

        # –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π layout –¥–ª—è –Ω–∏–∑–∫–∏—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
        main_layout = QVBoxLayout(central_widget)
        main_layout.setSpacing(10)
        main_layout.setContentsMargins(16, 12, 16, 12)

        # –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
        header_layout = QHBoxLayout()
        header_layout.setSpacing(16)

        # –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è –∏–∫–æ–Ω–∫–∞
        icon_label = QLabel()
        icon_size = 32
        qt_icon = qta.icon('fa5s.file-pdf', color='#667eea')
        icon_pixmap = qt_icon.pixmap(icon_size, icon_size)
        icon_label.setPixmap(icon_pixmap)
        header_layout.addWidget(icon_label)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–æ–π
        title_label = QLabel('PDF Merger Pro')
        title_label.setObjectName('title')
        header_layout.addWidget(title_label)

        header_layout.addStretch()

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ—Ä—Å–∏–∏
        version_label = QLabel('v2.0')
        version_label.setStyleSheet("""
            color: #adb5bd;
            font-size: 12px;
            font-weight: 500;
            background-color: #f8f9fa;
            padding: 4px 8px;
            border-radius: 4px;
        """)
        header_layout.addWidget(version_label)

        main_layout.addLayout(header_layout)

        # –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
        subtitle_label = QLabel('–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ PDF —Ñ–∞–π–ª—ã –≤ –æ–±–ª–∞—Å—Ç—å –Ω–∏–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è')
        subtitle_label.setObjectName('subtitle')
        main_layout.addWidget(subtitle_label)

        # –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
        self.file_list = PDFListWidget()
        self.file_list.setMinimumHeight(180)
        self.file_list.setMaximumHeight(250)
        # –Ø–≤–Ω–æ –≤–∫–ª—é—á–∞–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—É—é –ø—Ä–æ–∫—Ä—É—Ç–∫—É
        self.file_list.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAsNeeded)
        self.file_list.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAsNeeded)
        main_layout.addWidget(self.file_list)

        # –ì—Ä—É–ø–ø–∞ –∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞–º–∏
        file_controls_group = QWidget()
        file_controls_group.setObjectName('button_group')
        file_controls_layout = QVBoxLayout(file_controls_group)
        file_controls_layout.setContentsMargins(0, 0, 0, 0)
        file_controls_layout.setSpacing(6)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≥—Ä—É–ø–ø—ã
        controls_title = QLabel('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞–º–∏')
        controls_title.setStyleSheet("""
            color: #495057;
            font-size: 14px;
            font-weight: 600;
            margin-bottom: 8px;
        """)
        file_controls_layout.addWidget(controls_title)

        # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        main_controls_layout = QHBoxLayout()
        main_controls_layout.setSpacing(8)

        # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
        self.add_btn = QPushButton('–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã')
        self.add_btn.setIcon(qta.icon('fa5s.plus', color='#28a745'))
        self.add_btn.clicked.connect(self.add_files)
        self.add_btn.setStyleSheet("""
            QPushButton {
                border-color: #28a745;
                color: #28a745;
            }
            QPushButton:hover {
                background-color: #28a745;
                color: white;
            }
        """)
        main_controls_layout.addWidget(self.add_btn)

        # –ö–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        self.preview_btn = QPushButton('–ü—Ä–æ—Å–º–æ—Ç—Ä')
        self.preview_btn.setIcon(qta.icon('fa5s.eye', color='#17a2b8'))
        self.preview_btn.clicked.connect(self.preview_pdf)
        self.preview_btn.setStyleSheet("""
            QPushButton {
                border-color: #17a2b8;
                color: #17a2b8;
            }
            QPushButton:hover {
                background-color: #17a2b8;
                color: white;
            }
        """)
        main_controls_layout.addWidget(self.preview_btn)

        main_controls_layout.addStretch()

        # –ö–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
        move_controls_layout = QHBoxLayout()
        move_controls_layout.setSpacing(8)

        self.move_up_btn = QPushButton()
        self.move_up_btn.setIcon(qta.icon('fa5s.arrow-up', color='#6c757d'))
        self.move_up_btn.setToolTip('–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –≤–≤–µ—Ä—Ö')
        self.move_up_btn.clicked.connect(self.move_up)
        self.move_up_btn.setFixedSize(40, 40)
        move_controls_layout.addWidget(self.move_up_btn)

        self.move_down_btn = QPushButton()
        self.move_down_btn.setIcon(qta.icon('fa5s.arrow-down', color='#6c757d'))
        self.move_down_btn.setToolTip('–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –≤–Ω–∏–∑')
        self.move_down_btn.clicked.connect(self.move_down)
        self.move_down_btn.setFixedSize(40, 40)
        move_controls_layout.addWidget(self.move_down_btn)

        main_controls_layout.addLayout(move_controls_layout)
        file_controls_layout.addLayout(main_controls_layout)

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        secondary_controls_layout = QHBoxLayout()
        secondary_controls_layout.setSpacing(8)

        # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
        self.remove_btn = QPushButton('–£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π')
        self.remove_btn.setIcon(qta.icon('fa5s.trash', color='#dc3545'))
        self.remove_btn.clicked.connect(self.remove_file)
        self.remove_btn.setStyleSheet("""
            QPushButton {
                border-color: #dc3545;
                color: #dc3545;
            }
            QPushButton:hover {
                background-color: #dc3545;
                color: white;
            }
        """)
        secondary_controls_layout.addWidget(self.remove_btn)

        # –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏
        self.clear_btn = QPushButton('–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ')
        self.clear_btn.setIcon(qta.icon('fa5s.broom', color='#ffc107'))
        self.clear_btn.clicked.connect(self.clear_list)
        self.clear_btn.setStyleSheet("""
            QPushButton {
                border-color: #ffc107;
                color: #856404;
            }
            QPushButton:hover {
                background-color: #ffc107;
                color: #212529;
            }
        """)
        secondary_controls_layout.addWidget(self.clear_btn)

        secondary_controls_layout.addStretch()
        file_controls_layout.addLayout(secondary_controls_layout)

        main_layout.addWidget(file_controls_group)

        # –ì—Ä—É–ø–ø–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
        action_group = QWidget()
        action_group.setObjectName('button_group')
        action_layout = QVBoxLayout(action_group)
        action_layout.setContentsMargins(0, 0, 0, 0)
        action_layout.setSpacing(6)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≥—Ä—É–ø–ø—ã –¥–µ–π—Å—Ç–≤–∏–π
        action_title = QLabel('–î–µ–π—Å—Ç–≤–∏—è')
        action_title.setStyleSheet("""
            color: #495057;
            font-size: 14px;
            font-weight: 600;
            margin-bottom: 8px;
        """)
        action_layout.addWidget(action_title)

        # –ö–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
        self.preview_all_btn = QPushButton('üîç –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤')
        self.preview_all_btn.setObjectName('preview_all_btn')
        self.preview_all_btn.setIcon(qta.icon('fa5s.eye', color='white'))
        self.preview_all_btn.clicked.connect(self.preview_all_pdfs)
        action_layout.addWidget(self.preview_all_btn)

        # –ì–ª–∞–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è
        self.merge_btn = QPushButton('üöÄ –û–±—ä–µ–¥–∏–Ω–∏—Ç—å PDF —Ñ–∞–π–ª—ã')
        self.merge_btn.setObjectName('merge_btn')
        self.merge_btn.setIcon(qta.icon('fa5s.magic', color='white'))
        self.merge_btn.clicked.connect(self.merge_pdfs)
        action_layout.addWidget(self.merge_btn)

        main_layout.addWidget(action_group)

        # –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å —Å—Ç–∞—Ç—É—Å–∞
        status_group = QWidget()
        status_layout = QHBoxLayout(status_group)
        status_layout.setContentsMargins(16, 12, 16, 12)
        status_layout.setSpacing(12)

        # –ò–∫–æ–Ω–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
        self.status_icon = QLabel()
        status_icon_pixmap = qta.icon('fa5s.check-circle', color='#28a745').pixmap(16, 16)
        self.status_icon.setPixmap(status_icon_pixmap)
        status_layout.addWidget(self.status_icon)

        # –¢–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞
        self.status_label = QLabel('–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ')
        self.status_label.setObjectName('status')
        status_layout.addWidget(self.status_label)

        status_layout.addStretch()

        # –°—á–µ—Ç—á–∏–∫ —Ñ–∞–π–ª–æ–≤
        self.file_count_label = QLabel('–§–∞–π–ª–æ–≤: 0')
        self.file_count_label.setStyleSheet("""
            color: #6c757d;
            font-size: 12px;
            font-weight: 500;
            background-color: #e9ecef;
            padding: 4px 8px;
            border-radius: 4px;
        """)
        status_layout.addWidget(self.file_count_label)

        main_layout.addWidget(status_group)

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞
        self.file_list.itemChanged.connect(self.update_info)
        self.file_list.itemSelectionChanged.connect(self.update_buttons)

        # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤ –º–æ–¥–µ–ª–∏
        model = self.file_list.model()
        if model:
            model.rowsInserted.connect(self.update_info) # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
            model.rowsRemoved.connect(self.update_info)   # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏

        self.update_info()
        self.update_buttons()

    def add_files(self):
        files, _ = QFileDialog.getOpenFileNames(
            self,
            '–í—ã–±–µ—Ä–∏—Ç–µ PDF —Ñ–∞–π–ª—ã',
            '',
            'PDF —Ñ–∞–π–ª—ã (*.pdf)'
        )

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
        existing_files = []
        for i in range(self.file_list.count()):
            item = self.file_list.item(i)
            if item:
                existing_files.append(item.text())
        for file_path in files:
            if file_path and file_path not in existing_files:
                self.file_list.addItem(file_path)

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ —Å–∏–≥–Ω–∞–ª rowsInserted

    def remove_file(self):
        current_row = self.file_list.currentRow()
        if current_row >= 0:
            self.file_list.takeItem(current_row)
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ —Å–∏–≥–Ω–∞–ª rowsRemoved

    def clear_list(self):
        if self.file_list.count() > 0:
            reply = QMessageBox.question(
                self,
                '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ',
                '–û—á–∏—Å—Ç–∏—Ç—å –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤?',
                QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No
            )

            if reply == QMessageBox.StandardButton.Yes:
                self.file_list.clear()
                # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ —Å–∏–≥–Ω–∞–ª rowsRemoved

    def move_up(self):
        current_row = self.file_list.currentRow()
        if current_row > 0:
            item = self.file_list.takeItem(current_row)
            self.file_list.insertItem(current_row - 1, item)
            self.file_list.setCurrentRow(current_row - 1)
            self.update_buttons() # –û–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è

    def move_down(self):
        current_row = self.file_list.currentRow()
        if current_row < self.file_list.count() - 1 and current_row >= 0:
            item = self.file_list.takeItem(current_row)
            self.file_list.insertItem(current_row + 1, item)
            self.file_list.setCurrentRow(current_row + 1)
            self.update_buttons() # –û–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è

    def update_info(self):
        count = self.file_list.count()

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ —Ñ–∞–π–ª–æ–≤
        self.file_count_label.setText(f'–§–∞–π–ª–æ–≤: {count}')

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        if not hasattr(self, 'worker') or not (self.worker and self.worker.isRunning()):
            if count == 0:
                self.status_label.setText('–î–æ–±–∞–≤—å—Ç–µ PDF —Ñ–∞–π–ª—ã –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã')
                self.status_icon.setPixmap(qta.icon('fa5s.info-circle', color='#17a2b8').pixmap(16, 16))
            elif count == 1:
                self.status_label.setText('–î–æ–±–∞–≤—å—Ç–µ –µ—â–µ —Ñ–∞–π–ª—ã –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è')
                self.status_icon.setPixmap(qta.icon('fa5s.exclamation-triangle', color='#ffc107').pixmap(16, 16))
            else:
                self.status_label.setText('–ì–æ—Ç–æ–≤ –∫ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—é')
                self.status_icon.setPixmap(qta.icon('fa5s.check-circle', color='#28a745').pixmap(16, 16))

    def update_buttons(self):
        current_row = self.file_list.currentRow()
        count = self.file_list.count()
        is_merging = hasattr(self, 'worker') and self.worker is not None and self.worker.isRunning()

        self.add_btn.setEnabled(not is_merging)
        self.remove_btn.setEnabled(current_row >= 0 and not is_merging)
        self.clear_btn.setEnabled(count > 0 and not is_merging)
        self.preview_btn.setEnabled(current_row >= 0 and not is_merging) # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Ñ–∞–π–ª
        self.move_up_btn.setEnabled(current_row > 0 and not is_merging)
        self.move_down_btn.setEnabled(current_row >= 0 and current_row < count - 1 and not is_merging)
        self.merge_btn.setEnabled(count >= 2 and not is_merging)
        self.preview_all_btn.setEnabled(count >= 1 and not is_merging) # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤

    def merge_pdfs(self):
        file_paths = []
        for i in range(self.file_list.count()):
            item = self.file_list.item(i)
            if item:
                file_paths.append(item.text())

        if len(file_paths) < 2:
            QMessageBox.warning(
                self,
                '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ',
                '–î–æ–±–∞–≤—å—Ç–µ –º–∏–Ω–∏–º—É–º 2 PDF —Ñ–∞–π–ª–∞ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è'
            )
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
        missing_files = [os.path.basename(f) for f in file_paths if not os.path.exists(f)]
        if missing_files:
            QMessageBox.warning(
                self,
                '–û—à–∏–±–∫–∞',
                f'–°–ª–µ–¥—É—é—â–∏–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã:\n{", ".join(missing_files)}'
            )
            return

        # –í—ã–±–æ—Ä –º–µ—Å—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        output_file, _ = QFileDialog.getSaveFileName(
            self,
            '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π PDF',
            'merged.pdf',
            'PDF —Ñ–∞–π–ª—ã (*.pdf)'
        )

        if not output_file:
            return

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–∞–±–æ—á–∏–π –ø–æ—Ç–æ–∫
        self.worker = PDFMergerWorker(file_paths, output_file)
        self.worker.finished.connect(self.merging_finished)
        self.worker.error.connect(self.merging_error)
        self.worker.started.connect(self.merging_started)
        self.worker.start()

    def merging_started(self):
        """–°–ª–æ—Ç, –≤—ã–∑—ã–≤–∞–µ–º—ã–π –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è."""
        self.status_label.setText("–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...")
        self.status_icon.setPixmap(qta.icon('fa5s.spinner', color='#17a2b8').pixmap(16, 16))
        self.update_buttons() # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏

    def merging_finished(self, output_file):
        """–°–ª–æ—Ç, –≤—ã–∑—ã–≤–∞–µ–º—ã–π –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è."""
        self.worker = None # –û—á–∏—â–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Ç–æ–∫
        self.status_label.setText("–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        self.status_icon.setPixmap(qta.icon('fa5s.check-circle', color='#28a745').pixmap(16, 16))
        self.update_buttons() # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏

        # –£–ª—É—á—à–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        msg = QMessageBox(self)
        msg.setIcon(QMessageBox.Icon.Information)
        msg.setWindowTitle('–£—Å–ø–µ—à–Ω–æ!')
        msg.setText('PDF —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã!')
        msg.setInformativeText(f'–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤:\n{output_file}')
        msg.setStandardButtons(QMessageBox.StandardButton.Ok)
        msg.exec()

    def merging_error(self, error_message):
        """–°–ª–æ—Ç, –≤—ã–∑—ã–≤–∞–µ–º—ã–π –ø—Ä–∏ –æ—à–∏–±–∫–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è."""
        self.worker = None # –û—á–∏—â–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Ç–æ–∫
        self.status_label.setText("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏")
        self.status_icon.setPixmap(qta.icon('fa5s.exclamation-circle', color='#dc3545').pixmap(16, 16))
        self.update_buttons() # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏

        # –£–ª—É—á—à–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        msg = QMessageBox(self)
        msg.setIcon(QMessageBox.Icon.Critical)
        msg.setWindowTitle('–û—à–∏–±–∫–∞')
        msg.setText('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤')
        msg.setInformativeText(error_message)
        msg.setStandardButtons(QMessageBox.StandardButton.Ok)
        msg.exec()

    def preview_pdf(self):
        """–û—Ç–∫—Ä—ã—Ç—å –æ–∫–Ω–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ PDF —Ñ–∞–π–ª–∞"""
        current_row = self.file_list.currentRow()
        if current_row >= 0:
            item = self.file_list.item(current_row)
            if item:
                file_path = item.text()

                if not os.path.exists(file_path):
                    QMessageBox.warning(
                        self,
                        '–û—à–∏–±–∫–∞',
                        f'–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {os.path.basename(file_path)}'
                    )
                    return

                if not fitz:
                    QMessageBox.warning(
                        self,
                        '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å',
                        '–î–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PyMuPDF:\npip install PyMuPDF'
                    )
                    return

                # –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
                preview_dialog = PDFPreviewDialog(self, file_path)
                preview_dialog.exec()

    def preview_all_pdfs(self):
        """–û—Ç–∫—Ä—ã—Ç—å –æ–∫–Ω–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö PDF —Ñ–∞–π–ª–æ–≤ –ø–µ—Ä–µ–¥ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ–º"""
        file_paths = []
        for i in range(self.file_list.count()):
            item = self.file_list.item(i)
            if item:
                file_paths.append(item.text())

        if not file_paths:
            QMessageBox.warning(
                self,
                '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ',
                '–î–æ–±–∞–≤—å—Ç–µ PDF —Ñ–∞–π–ª—ã –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞'
            )
            return

        if not fitz:
            QMessageBox.warning(
                self,
                '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å',
                '–î–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PyMuPDF:\npip install PyMuPDF'
            )
            return

        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
        preview_all_dialog = PDFMultiPreviewDialog(self, file_paths)
        preview_all_dialog.exec()


class PDFPreviewDialog(QDialog):
    """–î–∏–∞–ª–æ–≥ –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ PDF-—Ñ–∞–π–ª–æ–≤"""

    def __init__(self, parent=None, file_path=None):
        super().__init__(parent)
        self.file_path = file_path
        self.current_page = 0
        self.total_pages = 0
        self.doc = None
        self.zoom_factor = 1.0  # –ù–∞—á–∞–ª—å–Ω—ã–π –º–∞—Å—à—Ç–∞–±

        self.init_ui()
        if file_path and os.path.exists(file_path):
            self.load_pdf(file_path)

    def init_ui(self):
        self.setWindowTitle('–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä PDF')
        # –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –ø–æ–¥ –Ω–∏–∑–∫–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
        self.setGeometry(100, 30, 750, 650)
        self.setMinimumSize(650, 500)
        self.setMaximumSize(950, 750)

        # –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        self.setStyleSheet("""
            QDialog {
                background-color: #f8f9fa;
                color: #212529;
            }
            QLabel#page_display {
                font-size: 14px;
                color: #495057;
                padding: 8px 12px;
                background-color: white;
                border-radius: 6px;
                font-weight: 500;
            }
            QComboBox {
                border: 2px solid #e9ecef;
                border-radius: 6px;
                padding: 8px 12px;
                min-width: 120px;
                font-size: 13px;
                background-color: white;
            }
            QComboBox:hover {
                border-color: #6c757d;
            }
            QComboBox:focus {
                border-color: #667eea;
            }
            QPushButton, QToolButton {
                background-color: white;
                border: 2px solid #e9ecef;
                border-radius: 8px;
                padding: 10px 16px;
                font-size: 13px;
                font-weight: 500;
                color: #495057;
                min-width: 80px;
            }
            QPushButton:hover, QToolButton:hover {
                background-color: #f8f9fa;
                border-color: #6c757d;
            }
            QPushButton:pressed, QToolButton:pressed {
                background-color: #e9ecef;
            }
            QScrollArea {
                border: none;
                background-color: white;
                border-radius: 12px;
            }
            QLabel {
                color: #495057;
                font-family: 'Segoe UI', Arial, sans-serif;
            }
        """)

        # –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –º–∞–∫–µ—Ç
        main_layout = QVBoxLayout(self)
        main_layout.setSpacing(8)
        main_layout.setContentsMargins(12, 10, 12, 10)

        # –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ –¥–≤–µ —Å—Ç—Ä–æ–∫–∏
        controls_widget = QWidget()
        controls_layout = QVBoxLayout(controls_widget)
        controls_layout.setSpacing(4)
        controls_layout.setContentsMargins(0, 0, 0, 0)

        # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
        nav_panel = QHBoxLayout()
        nav_panel.setSpacing(8)

        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
        self.prev_btn = QToolButton()
        self.prev_btn.setIcon(qta.icon('fa5s.chevron-left'))
        self.prev_btn.setToolTip('–ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞')
        self.prev_btn.clicked.connect(self.prev_page)
        self.prev_btn.setFixedSize(32, 32)
        nav_panel.addWidget(self.prev_btn)

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π/–≤—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü
        self.page_label = QLabel('–°—Ç—Ä–∞–Ω–∏—Ü–∞: 0 / 0')
        self.page_label.setObjectName('page_display')
        self.page_label.setMinimumWidth(120)
        self.page_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        nav_panel.addWidget(self.page_label)

        self.next_btn = QToolButton()
        self.next_btn.setIcon(qta.icon('fa5s.chevron-right'))
        self.next_btn.setToolTip('–°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞')
        self.next_btn.clicked.connect(self.next_page)
        self.next_btn.setFixedSize(32, 32)
        nav_panel.addWidget(self.next_btn)

        nav_panel.addStretch()
        controls_layout.addLayout(nav_panel)

        # –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ - –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
        zoom_panel = QHBoxLayout()
        zoom_panel.setSpacing(8)

        # –í—ã–±–æ—Ä –º–∞—Å—à—Ç–∞–±–∞
        zoom_label = QLabel('–ú–∞—Å—à—Ç–∞–±:')
        zoom_panel.addWidget(zoom_label)

        self.zoom_combo = QComboBox()
        self.zoom_combo.addItems(['50%', '75%', '100%', '125%', '150%', '200%'])
        self.zoom_combo.setCurrentText('100%')
        self.zoom_combo.currentTextChanged.connect(self.change_zoom)
        self.zoom_combo.setMinimumWidth(80)
        zoom_panel.addWidget(self.zoom_combo)

        # –ö–Ω–æ–ø–∫–∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
        self.zoom_out_btn = QToolButton()
        self.zoom_out_btn.setIcon(qta.icon('fa5s.search-minus'))
        self.zoom_out_btn.setToolTip('–£–º–µ–Ω—å—à–∏—Ç—å')
        self.zoom_out_btn.clicked.connect(self.zoom_out)
        self.zoom_out_btn.setFixedSize(32, 32)
        zoom_panel.addWidget(self.zoom_out_btn)

        self.zoom_in_btn = QToolButton()
        self.zoom_in_btn.setIcon(qta.icon('fa5s.search-plus'))
        self.zoom_in_btn.setToolTip('–£–≤–µ–ª–∏—á–∏—Ç—å')
        self.zoom_in_btn.clicked.connect(self.zoom_in)
        self.zoom_in_btn.setFixedSize(32, 32)
        zoom_panel.addWidget(self.zoom_in_btn)

        zoom_panel.addStretch()
        controls_layout.addLayout(zoom_panel)

        main_layout.addWidget(controls_widget)

        # –û–±–ª–∞—Å—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        self.scroll_area = QScrollArea()
        self.scroll_area.setWidgetResizable(False)  # –í–∞–∂–Ω–æ: False –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –±–æ–ª—å—à–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
        self.scroll_area.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAsNeeded)
        self.scroll_area.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAsNeeded)

        # –ú–µ—Ç–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–±–µ–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞)
        self.preview_label = QLabel('–í—ã–±–µ—Ä–∏—Ç–µ PDF —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞')
        self.preview_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.preview_label.setStyleSheet("background-color: white;")

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–µ—Ç–∫—É –∫–∞–∫ –≤–∏–¥–∂–µ—Ç –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        self.scroll_area.setWidget(self.preview_label)

        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±–ª–∞—Å—Ç—å –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –º–∞–∫–µ—Ç
        main_layout.addWidget(self.scroll_area, 1)

        # –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å —Å –∫–Ω–æ–ø–∫–∞–º–∏
        bottom_panel = QHBoxLayout()
        bottom_panel.addStretch()

        # –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
        close_btn = QPushButton('–ó–∞–∫—Ä—ã—Ç—å')
        close_btn.clicked.connect(self.close)
        bottom_panel.addWidget(close_btn)

        main_layout.addLayout(bottom_panel)

        # –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        self.update_navigation_buttons()

    def load_pdf(self, file_path):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å PDF —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"""
        if not fitz:
            self.preview_label.setText("PyMuPDF –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.\n–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É: pip install PyMuPDF")
            return

        try:
            self.file_path = file_path
            self.doc = fitz.open(file_path)  # type: ignore
            self.total_pages = len(self.doc)
            self.current_page = 0

            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
            self.page_label.setText(f'–°—Ç—Ä–∞–Ω–∏—Ü–∞: {self.current_page + 1} / {self.total_pages}')

            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            self.display_page(self.current_page)

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            self.update_navigation_buttons()

            # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∏–º–µ–Ω–µ–º —Ñ–∞–π–ª–∞
            self.setWindowTitle(f'–ü—Ä–æ—Å–º–æ—Ç—Ä: {os.path.basename(file_path)}')
        except Exception as e:
            self.preview_label.setText(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ PDF: {str(e)}")

    def display_page(self, page_num):
        """–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —É–∫–∞–∑–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É PDF"""
        if not self.doc or page_num < 0 or page_num >= self.total_pages:
            return

        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            page = self.doc[page_num]

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∞—Å—à—Ç–∞–±
            zoom = self.zoom_factor

            # –†–µ–Ω–¥–µ—Ä–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            if fitz:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ fitz –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ
                # type: ignore - –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–æ–≤ –¥–ª—è PyMuPDF
                pix = page.get_pixmap(matrix=fitz.Matrix(zoom, zoom))  # type: ignore
            else:
                return

            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ QImage
            img = QImage(pix.samples, pix.width, pix.height, pix.stride, QImage.Format.Format_RGB888)

            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ QPixmap –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º
            pixmap = QPixmap.fromImage(img)
            self.preview_label.setPixmap(pixmap)

            # –ò–∑–º–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –º–µ—Ç–∫–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ä–∞–∑–º–µ—Ä–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            self.preview_label.resize(pixmap.size())

            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            self.page_label.setText(f'–°—Ç—Ä–∞–Ω–∏—Ü–∞: {page_num + 1} / {self.total_pages}')

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            self.update_navigation_buttons()
        except Exception as e:
            self.preview_label.setText(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {str(e)}")

    def prev_page(self):
        """–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ"""
        if self.current_page > 0:
            self.current_page -= 1
            self.display_page(self.current_page)

    def next_page(self):
        """–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ"""
        if self.current_page < self.total_pages - 1:
            self.current_page += 1
            self.display_page(self.current_page)

    def update_navigation_buttons(self):
        """–û–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
        has_doc = self.doc is not None and self.total_pages > 0

        self.prev_btn.setEnabled(has_doc and self.current_page > 0)
        self.next_btn.setEnabled(has_doc and self.current_page < self.total_pages - 1)
        self.zoom_combo.setEnabled(has_doc)
        self.zoom_in_btn.setEnabled(has_doc)
        self.zoom_out_btn.setEnabled(has_doc)

    def change_zoom(self, zoom_text):
        """–ò–∑–º–µ–Ω–∏—Ç—å –º–∞—Å—à—Ç–∞–± –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–∞—Å—à—Ç–∞–±–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ "100%")
            zoom_value = float(zoom_text.rstrip('%')) / 100.0
            self.zoom_factor = zoom_value

            # –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –Ω–æ–≤—ã–º –º–∞—Å—à—Ç–∞–±–æ–º
            if self.doc:
                self.display_page(self.current_page)
        except ValueError:
            pass

    def zoom_in(self):
        """–£–≤–µ–ª–∏—á–∏—Ç—å –º–∞—Å—à—Ç–∞–±"""
        # –ù–∞—Ö–æ–¥–∏–º —Å–ª–µ–¥—É—é—â–∏–π –±–æ–ª—å—à–∏–π –º–∞—Å—à—Ç–∞–± –≤ –∫–æ–º–±–æ–±–æ–∫—Å–µ
        current_index = self.zoom_combo.currentIndex()
        if current_index < self.zoom_combo.count() - 1:
            self.zoom_combo.setCurrentIndex(current_index + 1)

    def zoom_out(self):
        """–£–º–µ–Ω—å—à–∏—Ç—å –º–∞—Å—à—Ç–∞–±"""
        # –ù–∞—Ö–æ–¥–∏–º —Å–ª–µ–¥—É—é—â–∏–π –º–µ–Ω—å—à–∏–π –º–∞—Å—à—Ç–∞–± –≤ –∫–æ–º–±–æ–±–æ–∫—Å–µ
        current_index = self.zoom_combo.currentIndex()
        if current_index > 0:
            self.zoom_combo.setCurrentIndex(current_index - 1)

    def closeEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞"""
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –æ–∫–Ω–∞
        if self.doc:
            self.doc.close()  # type: ignore
        event.accept()


def main():
    app = QApplication(sys.argv)

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–∫–æ–Ω–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    app.setWindowIcon(qta.icon('fa5s.file-pdf'))

    window = PDFMergerApp()
    window.show()

    sys.exit(app.exec())


if __name__ == '__main__':
    main()
